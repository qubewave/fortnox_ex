# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Api.FinancialYearsResource do
  @moduledoc """
  API calls for all endpoints tagged `FinancialYearsResource`.
  """

  alias FortnoxEx.Connection
  import FortnoxEx.RequestBuilder

  @doc """
  Create a financial year

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:body` (FinancialYearWrap): to create

  ### Returns

  - `{:ok, FortnoxEx.Model.FinancialYearWrap.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_financial_years_resource(Tesla.Env.client, keyword()) :: {:ok, FortnoxEx.Model.FinancialYearWrap.t} | {:error, Tesla.Env.t}
  def create_financial_years_resource(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:post)
      |> url("/3/financialyears")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.FinancialYearWrap{}}
    ])
  end

  @doc """
  Retrieve a list of financial years
  Add the query param to filter on specific date.

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:date` (Date.t): date to filter on, for example 2020-06-30

  ### Returns

  - `{:ok, FortnoxEx.Model.FinancialYearWrapList.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_by_date(Tesla.Env.client, keyword()) :: {:ok, FortnoxEx.Model.FinancialYearWrapList.t} | {:error, Tesla.Env.t}
  def get_by_date(connection, opts \\ []) do
    optional_params = %{
      :Date => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/3/financialyears")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.FinancialYearWrapList{}}
    ])
  end

  @doc """
  Retrieve financial year by id

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `id` (integer()): identifies the year
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, FortnoxEx.Model.FinancialYearWrap.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_by_id(Tesla.Env.client, integer(), keyword()) :: {:ok, FortnoxEx.Model.FinancialYearWrap.t} | {:error, Tesla.Env.t}
  def get_by_id(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/3/financialyears/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.FinancialYearWrap{}}
    ])
  end
end
