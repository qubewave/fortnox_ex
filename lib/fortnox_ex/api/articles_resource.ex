# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Api.ArticlesResource do
  @moduledoc """
  API calls for all endpoints tagged `ArticlesResource`.
  """

  alias FortnoxEx.Connection
  import FortnoxEx.RequestBuilder

  @doc """
  Get full article registrations that match filter
  <p>  <b>Response property descriptions:</b><br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>id</i></b> - The unique id of a basic common combination of article registrations. (The basic common combination means \"user/purchase date/customer/project/cost center\", which leads to a dialog with several article registrations.)<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>purchaseDate</i></b> - The date on which the article is purchased or registered for charging.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>ownerId</i></b> - The user ID who creates the basic common combination.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>version</i></b> - The version of the basic common combination (article dialog) being updated, which is used for handling the concurrency issue.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>registrationType</i></b> - It is always \"ARTICLE\" for article list endpoint.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b>Sub-Class - ArticleRegistration:</b><br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>id</i></b> - The unique id of an article registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>registrationId</i></b> - The id of the basic common combination.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>orderIndex</i></b> - the order index for the article registration in regard of the common combination.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>ownerId</i></b> - The user ID who owns the article registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>totalQuantity</i></b> - The quantity of the article.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>unitPrice</i></b> - The unit price connected to the article registration, which might be locked on an invoice/order basis or for non-invoiceable.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>unitCost</i></b> - The unit cost connected to the article registration, which might be locked on an invoice/order basis.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>invoiceBasisId</i></b> - The ID of invoice/order basis which is used for creating an invoice/order.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>nonInvoiceable</i></b> - If the article registration would be ignored for charging or not.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>note</i></b> - The note on the article registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>documentId</i></b> - The document ID which includes the article registration and is created in Invoicing application.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        <b><i>documentType</i></b> - The document type which could be \"invoice\" or \"order\".  </p>

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:fromDate` (Date.t): The start date of the search span, the max of which should be 1 year to the end date (\"toDate\").  Example: 2022-11-01
    - `:toDate` (Date.t): The end date of the search span, the max of which should be 1 year back to the start date (\"fromDate\").  Example: 2022-11-30
    - `:customerIds` ([String.t]): An array of customer IDs which are being used in database and in one-to-one relation with customer numbers.  Example: 100,101,102
    - `:projectIds` ([String.t]): An array of project IDs.  Example: p1,p2,p3
    - `:includeRegistrationsWithoutProject` (boolean()): If the article registration without project is included, or not.
    - `:itemIds` ([String.t]): An array of article IDs.  Example: s1,s2,s3
    - `:costCenterIds` ([String.t]): An array of cost center IDs.  Example: cc1,cc2,cc3
    - `:ownerIds` ([String.t]): An array of user ids who own the article registrations.  Example: 1,2,3
    - `:invoiced` (boolean()): If a document is created with the article registration, or not.
    - `:inInvoiceBasis` (boolean()): If the article registration is locked on an invoice basis, or not.
    - `:internalArticles` (boolean()): If the article registration is internal, which is registered on an internal customer, or not.
    - `:nonInvoiceable` (boolean()): If the article registration has been moved to non-invoiceable, or not.
    - `:includeNonInvoiceablePrice` (boolean()): If the price of the non-invoiceable article registration is included, or not.

  ### Returns

  - `{:ok, [%BaseArticleRegistration{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec list(Tesla.Env.client, keyword()) :: {:ok, list(FortnoxEx.Model.BaseArticleRegistration.t)} | {:error, Tesla.Env.t}
  def list(connection, opts \\ []) do
    optional_params = %{
      :fromDate => :query,
      :toDate => :query,
      :customerIds => :query,
      :projectIds => :query,
      :includeRegistrationsWithoutProject => :query,
      :itemIds => :query,
      :costCenterIds => :query,
      :ownerIds => :query,
      :invoiced => :query,
      :inInvoiceBasis => :query,
      :internalArticles => :query,
      :nonInvoiceable => :query,
      :includeNonInvoiceablePrice => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/time/articles-v1")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%FortnoxEx.Model.BaseArticleRegistration{}]}
    ])
  end
end
