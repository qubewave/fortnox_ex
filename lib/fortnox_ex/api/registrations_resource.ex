# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Api.RegistrationsResource do
  @moduledoc """
  API calls for all endpoints tagged `RegistrationsResource`.
  """

  alias FortnoxEx.Connection
  import FortnoxEx.RequestBuilder

  @doc """
  Get time/absence registrations that match filter
  <p>  <b>Response property descriptions:</b><br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>id</i></b> - The unique id of the registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>userId</i></b> - The user ID who owns the registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>workedDate</i></b> - The date for which the registration is created.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>workedHours</i></b> - The time spent, or the time of absence.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>invoiceText</i></b> - The text to be included in the invoice/order basis which would be used to create an invoice/order.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>note</i></b> - The note on the registration.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>chargeHours</i></b> - The time to be invoiced, or 0 for the absence, or locked for non-invoiceable.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>childId</i></b> - The child ID related to the absence registration of parental leave (FPE), which comes from Payroll application.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>nonInvoiceable</i></b> - If the registration would be ignored for charging or not.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>invoiceBasisId</i></b> - The ID of invoice/order basis which is used for creating an invoice/order.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>documentId</i></b> - The document ID which includes the registration and is created in Invoicing application.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>documentType</i></b> - The document type which could be \"invoice\" or \"order\".<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>unitCost</i></b> - The unit cost from the registration owner who takes the work.<br/>  &nbsp;&nbsp;&nbsp;&nbsp;    <b><i>unitPrice</i></b> - The unit price for the service on the registration, which comes in priority from \"invoice/order basis\", \"price group\" or \"service\".  <p>

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:fromDate` (Date.t): The start date of the search span, the max of which should be 1 year to the end date (\"toDate\").  Example: 2022-11-01
    - `:toDate` (Date.t): The end date of the search span, the max of which should be 1 year back to the start date (\"fromDate\").  Example: 2022-11-30
    - `:customerIds` ([String.t]): An array of customer IDs which are being used in database and in one-to-one relation with customer numbers.  Example: 100,101,102
    - `:projectIds` ([String.t]): An array of project IDs.  Example: p1,p2,p3
    - `:serviceIds` ([String.t]): An array of service IDs.  Example: s1,s2,s3
    - `:costCenterIds` ([String.t]): An array of cost center IDs.  Example: cc1,cc2,cc3
    - `:regCodes` ([String.t]): An array of registration codes.  Example: TID,SEM,FPE
    - `:userIds` ([String.t]): An array of user IDs that time/absence registrations belong to.  Example: 1,2,3
    - `:includeRegistrationsWithoutProject` (boolean()): If the time/absence registration without project is included, or not.
    - `:invoiced` (boolean()): If a document is created with the time/absence registration, or not.
    - `:inInvoiceBasis` (boolean()): If the time/absence registration is locked on an invoice basis, or not.
    - `:internalTime` (boolean()): If the time/absence registration is internal, which is registered on an internal customer, or not.
    - `:nonInvoiceable` (boolean()): If the time/absence registration has been moved to non-invoiceable, or not.
    - `:includeNonInvoiceableChargeHours` (boolean()): If the price of the non-invoiceable time/absence registration is included, or not.

  ### Returns

  - `{:ok, [%DetailedRegistration{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec list_registrations_resource(Tesla.Env.client, keyword()) :: {:ok, list(FortnoxEx.Model.DetailedRegistration.t)} | {:error, Tesla.Env.t}
  def list_registrations_resource(connection, opts \\ []) do
    optional_params = %{
      :fromDate => :query,
      :toDate => :query,
      :customerIds => :query,
      :projectIds => :query,
      :serviceIds => :query,
      :costCenterIds => :query,
      :regCodes => :query,
      :userIds => :query,
      :includeRegistrationsWithoutProject => :query,
      :invoiced => :query,
      :inInvoiceBasis => :query,
      :internalTime => :query,
      :nonInvoiceable => :query,
      :includeNonInvoiceableChargeHours => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/time/registrations-v2")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%FortnoxEx.Model.DetailedRegistration{}]}
    ])
  end
end
