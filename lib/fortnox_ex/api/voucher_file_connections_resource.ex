# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Api.VoucherFileConnectionsResource do
  @moduledoc """
  API calls for all endpoints tagged `VoucherFileConnectionsResource`.
  """

  alias FortnoxEx.Connection
  import FortnoxEx.RequestBuilder

  @doc """
  Create a voucher file connection

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:body` (VoucherFileConnectionWrap): to create

  ### Returns

  - `{:ok, FortnoxEx.Model.VoucherFileConnectionWrap.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_voucher_file_connections_resource(Tesla.Env.client, keyword()) :: {:ok, FortnoxEx.Model.VoucherFileConnectionWrap.t} | {:error, Tesla.Env.t}
  def create_voucher_file_connections_resource(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:post)
      |> url("/3/voucherfileconnections/")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.VoucherFileConnectionWrap{}}
    ])
  end

  @doc """
  Retrieve a single voucher file connection

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `file_id` (String.t): identifies the voucher file connection
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, FortnoxEx.Model.VoucherFileConnectionWrap.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_voucher_file_connections_resource(Tesla.Env.client, String.t, keyword()) :: {:ok, FortnoxEx.Model.VoucherFileConnectionWrap.t} | {:error, Tesla.Env.t}
  def get_voucher_file_connections_resource(connection, file_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/3/voucherfileconnections/#{file_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.VoucherFileConnectionWrap{}}
    ])
  end

  @doc """
  Retrieve a list of voucher file connections
  The voucher file connections register can return a list of records or a single record. By specifying a FileId in the URL, a single record will be returned. Not specifying a FileId will return a list of records.

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, FortnoxEx.Model.VoucherFileConnectionList.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec list_voucher_file_connections_resource(Tesla.Env.client, keyword()) :: {:ok, FortnoxEx.Model.VoucherFileConnectionList.t} | {:error, Tesla.Env.t}
  def list_voucher_file_connections_resource(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/3/voucherfileconnections/")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %FortnoxEx.Model.VoucherFileConnectionList{}}
    ])
  end

  @doc """
  Remove a voucher file connection

  ### Parameters

  - `connection` (FortnoxEx.Connection): Connection to server
  - `file_id` (String.t): identifies the voucher file connection
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec remove_voucher_file_connections_resource(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def remove_voucher_file_connections_resource(connection, file_id, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/3/voucherfileconnections/#{file_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {:default, false}
    ])
  end
end
