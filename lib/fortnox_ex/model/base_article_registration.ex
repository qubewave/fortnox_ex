# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Model.BaseArticleRegistration do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :costCenter,
    :customer,
    :project,
    :articleRegistrations,
    :registeredArticle,
    :purchaseDate,
    :ownerId,
    :version,
    :createdTime,
    :registrationType
  ]

  @type t :: %__MODULE__{
    :id => String.t | nil,
    :costCenter => FortnoxEx.Model.TrCostCenter.t | nil,
    :customer => FortnoxEx.Model.TrCustomer.t,
    :project => FortnoxEx.Model.TrProject.t | nil,
    :articleRegistrations => [FortnoxEx.Model.ArticleRegistration.t] | nil,
    :registeredArticle => FortnoxEx.Model.ArticleRegistration.t | nil,
    :purchaseDate => Date.t,
    :ownerId => String.t | nil,
    :version => integer() | nil,
    :createdTime => DateTime.t | nil,
    :registrationType => String.t | nil
  }
end

defimpl Poison.Decoder, for: FortnoxEx.Model.BaseArticleRegistration do
  import FortnoxEx.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:costCenter, :struct, FortnoxEx.Model.TrCostCenter, options)
    |> deserialize(:customer, :struct, FortnoxEx.Model.TrCustomer, options)
    |> deserialize(:project, :struct, FortnoxEx.Model.TrProject, options)
    |> deserialize(:articleRegistrations, :list, FortnoxEx.Model.ArticleRegistration, options)
    |> deserialize(:registeredArticle, :struct, FortnoxEx.Model.ArticleRegistration, options)
    |> deserialize(:purchaseDate, :date, nil, options)
  end
end

