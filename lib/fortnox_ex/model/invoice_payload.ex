# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Model.InvoicePayload do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :AdministrationFee,
    :Address1,
    :Address2,
    :City,
    :Comments,
    :Country,
    :CostCenter,
    :CreditInvoiceReference,
    :Currency,
    :CurrencyRate,
    :CurrencyUnit,
    :CustomerName,
    :CustomerNumber,
    :DeliveryAddress1,
    :DeliveryAddress2,
    :DeliveryCity,
    :DeliveryCountry,
    :DeliveryDate,
    :DeliveryName,
    :DeliveryZipCode,
    :DocumentNumber,
    :DueDate,
    :EDIInformation,
    :EmailInformation,
    :EUQuarterlyReport,
    :ExternalInvoiceReference1,
    :ExternalInvoiceReference2,
    :Freight,
    :InvoiceDate,
    :InvoiceRows,
    :InvoiceType,
    :Labels,
    :Language,
    :NotCompleted,
    :OCR,
    :OurReference,
    :PaymentWay,
    :Phone1,
    :Phone2,
    :PriceList,
    :PrintTemplate,
    :Project,
    :OutboundDate,
    :Remarks,
    :TermsOfDelivery,
    :TermsOfPayment,
    :VATIncluded,
    :WayOfDelivery,
    :YourOrderNumber,
    :YourReference,
    :ZipCode,
    :TaxReductionType
  ]

  @type t :: %__MODULE__{
    :AdministrationFee => float() | nil,
    :Address1 => String.t | nil,
    :Address2 => String.t | nil,
    :City => String.t | nil,
    :Comments => String.t | nil,
    :Country => String.t | nil,
    :CostCenter => String.t | nil,
    :CreditInvoiceReference => String.t | nil,
    :Currency => String.t | nil,
    :CurrencyRate => float() | nil,
    :CurrencyUnit => integer() | nil,
    :CustomerName => String.t | nil,
    :CustomerNumber => String.t,
    :DeliveryAddress1 => String.t | nil,
    :DeliveryAddress2 => String.t | nil,
    :DeliveryCity => String.t | nil,
    :DeliveryCountry => String.t | nil,
    :DeliveryDate => Date.t | nil,
    :DeliveryName => String.t | nil,
    :DeliveryZipCode => String.t | nil,
    :DocumentNumber => String.t | nil,
    :DueDate => Date.t | nil,
    :EDIInformation => FortnoxEx.Model.InvoicePayloadEdiInformation.t | nil,
    :EmailInformation => FortnoxEx.Model.InvoicePayloadEmailInformation.t | nil,
    :EUQuarterlyReport => boolean() | nil,
    :ExternalInvoiceReference1 => String.t | nil,
    :ExternalInvoiceReference2 => String.t | nil,
    :Freight => float() | nil,
    :InvoiceDate => Date.t | nil,
    :InvoiceRows => [FortnoxEx.Model.InvoicePayloadInvoiceRow.t] | nil,
    :InvoiceType => String.t | nil,
    :Labels => [FortnoxEx.Model.InvoicePayloadLabel.t] | nil,
    :Language => String.t | nil,
    :NotCompleted => boolean() | nil,
    :OCR => String.t | nil,
    :OurReference => String.t | nil,
    :PaymentWay => String.t | nil,
    :Phone1 => String.t | nil,
    :Phone2 => String.t | nil,
    :PriceList => String.t | nil,
    :PrintTemplate => String.t | nil,
    :Project => String.t | nil,
    :OutboundDate => Date.t | nil,
    :Remarks => String.t | nil,
    :TermsOfDelivery => String.t | nil,
    :TermsOfPayment => String.t | nil,
    :VATIncluded => boolean() | nil,
    :WayOfDelivery => String.t | nil,
    :YourOrderNumber => String.t | nil,
    :YourReference => String.t | nil,
    :ZipCode => String.t | nil,
    :TaxReductionType => String.t | nil
  }
end

defimpl Poison.Decoder, for: FortnoxEx.Model.InvoicePayload do
  import FortnoxEx.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:DeliveryDate, :date, nil, options)
    |> deserialize(:DueDate, :date, nil, options)
    |> deserialize(:EDIInformation, :struct, FortnoxEx.Model.InvoicePayloadEdiInformation, options)
    |> deserialize(:EmailInformation, :struct, FortnoxEx.Model.InvoicePayloadEmailInformation, options)
    |> deserialize(:InvoiceDate, :date, nil, options)
    |> deserialize(:InvoiceRows, :list, FortnoxEx.Model.InvoicePayloadInvoiceRow, options)
    |> deserialize(:Labels, :list, FortnoxEx.Model.InvoicePayloadLabel, options)
    |> deserialize(:OutboundDate, :date, nil, options)
  end
end

