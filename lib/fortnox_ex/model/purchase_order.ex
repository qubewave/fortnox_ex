# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Model.PurchaseOrder do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :deliveryDate,
    :note,
    :internalReference,
    :supplierName,
    :messageToSupplier,
    :id,
    :orderDate,
    :supplierNumber,
    :rows,
    :stockPointId,
    :deliveryName,
    :deliveryAddress,
    :deliveryAddress2,
    :deliveryZipCode,
    :deliveryCity,
    :deliveryCountryCode,
    :supplierAddress,
    :supplierAddress2,
    :supplierPostCode,
    :supplierCity,
    :supplierCountryCode,
    :paymentTermsCode,
    :languageCode,
    :currencyCode,
    :ourReference,
    :yourReference,
    :confirmationEmail,
    :projectId,
    :costCenterCode,
    :stockPointCode,
    :totalReceivedQuantity,
    :voided,
    :responseState,
    :purchaseOrderState,
    :supplierEmail,
    :currencyRate,
    :currencyUnit,
    :orderValue,
    :manuallyCompleted,
    :purchaseType,
    :customerId,
    :customerNumber,
    :customerName,
    :orderValueInSEK,
    :supplier,
    :translatedResponseState,
    :outboundDocumentReference
  ]

  @type t :: %__MODULE__{
    :deliveryDate => Date.t | nil,
    :note => String.t | nil,
    :internalReference => String.t | nil,
    :supplierName => String.t | nil,
    :messageToSupplier => String.t | nil,
    :id => integer() | nil,
    :orderDate => Date.t,
    :supplierNumber => String.t,
    :rows => [FortnoxEx.Model.PurchaseOrderRow.t] | nil,
    :stockPointId => String.t | nil,
    :deliveryName => String.t,
    :deliveryAddress => String.t,
    :deliveryAddress2 => String.t | nil,
    :deliveryZipCode => String.t,
    :deliveryCity => String.t,
    :deliveryCountryCode => String.t | nil,
    :supplierAddress => String.t | nil,
    :supplierAddress2 => String.t | nil,
    :supplierPostCode => String.t | nil,
    :supplierCity => String.t | nil,
    :supplierCountryCode => String.t | nil,
    :paymentTermsCode => String.t,
    :languageCode => String.t | nil,
    :currencyCode => String.t,
    :ourReference => String.t | nil,
    :yourReference => String.t | nil,
    :confirmationEmail => String.t | nil,
    :projectId => String.t | nil,
    :costCenterCode => String.t | nil,
    :stockPointCode => String.t | nil,
    :totalReceivedQuantity => float() | nil,
    :voided => boolean() | nil,
    :responseState => String.t | nil,
    :purchaseOrderState => String.t | nil,
    :supplierEmail => String.t | nil,
    :currencyRate => float(),
    :currencyUnit => integer() | nil,
    :orderValue => float() | nil,
    :manuallyCompleted => boolean() | nil,
    :purchaseType => String.t | nil,
    :customerId => String.t | nil,
    :customerNumber => String.t | nil,
    :customerName => String.t | nil,
    :orderValueInSEK => float() | nil,
    :supplier => String.t | nil,
    :translatedResponseState => String.t | nil,
    :outboundDocumentReference => FortnoxEx.Model.DocumentReference.t | nil
  }
end

defimpl Poison.Decoder, for: FortnoxEx.Model.PurchaseOrder do
  import FortnoxEx.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:deliveryDate, :date, nil, options)
    |> deserialize(:orderDate, :date, nil, options)
    |> deserialize(:rows, :list, FortnoxEx.Model.PurchaseOrderRow, options)
    |> deserialize(:outboundDocumentReference, :struct, FortnoxEx.Model.DocumentReference, options)
  end
end

