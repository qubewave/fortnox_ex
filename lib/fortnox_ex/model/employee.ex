# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule FortnoxEx.Model.Employee do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :EmployeeId,
    :PersonalIdentityNumber,
    :FirstName,
    :LastName,
    :FullName,
    :Address1,
    :Address2,
    :PostCode,
    :City,
    :Country,
    :Phone1,
    :Phone2,
    :Email,
    :EmploymentDate,
    :EmploymentForm,
    :SalaryForm,
    :JobTitle,
    :PersonelType,
    :ScheduleId,
    :ForaType,
    :MonthlySalary,
    :HourlyPay,
    :TaxAllowance,
    :TaxTable,
    :TaxColumn,
    :AutoNonRecurringTax,
    :NonRecurringTax,
    :Inactive,
    :ClearingNo,
    :BankAccountNo,
    :EmployedTo,
    :AverageWeeklyHours,
    :AverageHourlyWage,
    :DatedWages,
    :DatedSchedules
  ]

  @type t :: %__MODULE__{
    :EmployeeId => String.t | nil,
    :PersonalIdentityNumber => String.t | nil,
    :FirstName => String.t | nil,
    :LastName => String.t | nil,
    :FullName => String.t | nil,
    :Address1 => String.t | nil,
    :Address2 => String.t | nil,
    :PostCode => String.t | nil,
    :City => String.t | nil,
    :Country => String.t | nil,
    :Phone1 => String.t | nil,
    :Phone2 => String.t | nil,
    :Email => String.t | nil,
    :EmploymentDate => Date.t | nil,
    :EmploymentForm => String.t | nil,
    :SalaryForm => String.t | nil,
    :JobTitle => String.t | nil,
    :PersonelType => String.t | nil,
    :ScheduleId => String.t | nil,
    :ForaType => String.t | nil,
    :MonthlySalary => String.t | nil,
    :HourlyPay => String.t | nil,
    :TaxAllowance => String.t | nil,
    :TaxTable => String.t | nil,
    :TaxColumn => integer() | nil,
    :AutoNonRecurringTax => boolean() | nil,
    :NonRecurringTax => String.t | nil,
    :Inactive => boolean() | nil,
    :ClearingNo => String.t | nil,
    :BankAccountNo => String.t | nil,
    :EmployedTo => Date.t | nil,
    :AverageWeeklyHours => String.t | nil,
    :AverageHourlyWage => String.t | nil,
    :DatedWages => [FortnoxEx.Model.EmployeeDatedWage.t] | nil,
    :DatedSchedules => [FortnoxEx.Model.EmployeeDatedSchedule.t] | nil
  }
end

defimpl Poison.Decoder, for: FortnoxEx.Model.Employee do
  import FortnoxEx.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:EmploymentDate, :date, nil, options)
    |> deserialize(:EmployedTo, :date, nil, options)
    |> deserialize(:DatedWages, :list, FortnoxEx.Model.EmployeeDatedWage, options)
    |> deserialize(:DatedSchedules, :list, FortnoxEx.Model.EmployeeDatedSchedule, options)
  end
end

